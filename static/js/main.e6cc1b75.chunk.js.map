{"version":3,"sources":["components/landingpage.js","components/projects.js","components/contact.js","components/bycicle-wheel-project.js","components/github.js","components/main.js","App.js","serviceWorker.js","index.js","assets/images/logo.png","assets/images/background.jpg"],"names":["Landing","class","src","Logo","alt","id","width","height","style","backgroundImage","Background","BackgroundRepeat","backgroundSize","params","particles","number","value","size","interactivity","events","onhover","enable","mode","Component","Projects","boxSizing","shadow","margin","float","backgroundColor","expand","color","fontSize","fontfamily","border","component","Link","to","href","target","Contact","paddingLeft","paddingRight","paddingBottom","className","onChange","label","rows","raised","accent","ripple","onClick","alert","BycicleWheelProject","Github","Main","exact","path","LandingPage","App","title","scroll","fontWeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"+QA4CeA,E,uKAnCP,OACA,yBAAKC,MAAM,eACP,yBAAKC,IAAKC,IAAMC,IAAI,OAAOH,MAAM,eACjC,kBAAC,IAAD,CACAI,GAAG,SACHC,MAAM,QACNC,OAAO,QACPC,MAAO,CACHC,gBAAiB,OAASC,IAAa,IACvCC,iBAAkB,YAClBC,eAAgB,SAEpBC,OAAQ,CACJC,UAAW,CACPC,OAAQ,CACJC,MAAO,KAEXC,KAAM,CACFD,MAAO,IAGfE,cAAe,CACXC,OAAQ,CACJC,QAAS,CACLC,QAAQ,EACRC,KAAM,qB,GA3BZC,a,OC6FPC,E,uKA9CP,OACA,yBAAKvB,MAAM,YAAYO,MAAO,CAACiB,UAAW,eACtC,kBAAC,OAAD,CAAMC,OAAQ,EAAGlB,MAAO,CAACF,MAAO,MAAOC,OAAQ,QAASoB,OAAQ,KAAMC,MAAM,OAAQC,gBAAgB,UAChG,kBAAC,YAAD,CAAWC,QAAM,EAACtB,MAAO,CAACuB,MAAO,OAAQC,SAAS,QAAlD,sBAA6E,0BAAM/B,MAAM,WAAZ,eAC7E,kBAAC,WAAD,CAAUO,MAAO,CAACuB,MAAM,QAASE,WAAY,gBAA7C,6JAIA,kBAAC,cAAD,CAAaC,QAAM,GACf,kBAAC,SAAD,CACI1B,MAAO,CAACuB,MAAM,WACdI,UAAWC,IAAMC,GAAG,0BAFxB,kBAOR,kBAAC,OAAD,CAAMX,OAAQ,EAAGlB,MAAO,CAACF,MAAO,MAAOC,OAAQ,QAASoB,OAAQ,KAAMC,MAAM,OAAQC,gBAAgB,UAChG,kBAAC,YAAD,CAAWC,QAAM,EAACtB,MAAO,CAACuB,MAAO,OAAQC,SAAS,QAAlD,kBAAyE,0BAAM/B,MAAM,WAAZ,eACzE,kBAAC,WAAD,CAAUO,MAAO,CAACuB,MAAM,QAASE,WAAY,gBAA7C,qNAKA,kBAAC,cAAD,CAAaC,QAAM,GACf,kBAAC,SAAD,CAAQ1B,MAAO,CAACuB,MAAM,WAAYO,KAAK,+FAA+FC,OAAO,UAA7I,kBAGR,kBAAC,OAAD,CAAMb,OAAQ,EAAGlB,MAAO,CAACF,MAAO,MAAOC,OAAQ,QAASoB,OAAQ,KAAMC,MAAM,OAAQC,gBAAgB,UAChG,kBAAC,YAAD,CAAWC,QAAM,EAACtB,MAAO,CAACuB,MAAO,OAAQC,SAAS,QAAlD,aACA,kBAAC,WAAD,CAAUxB,MAAO,CAACuB,MAAM,QAASE,WAAY,gBAA7C,6EAIA,kBAAC,cAAD,CAAaC,QAAM,GACf,kBAAC,SAAD,CACI1B,MAAO,CAACuB,MAAM,WACdI,UAAWC,IAAMC,GAAG,WAFxB,uB,GAnFGd,aCqCRiB,E,uKAnCP,OACA,yBAAKvC,MAAM,aACP,yBAAKA,MAAM,sBACP,wBAAIO,MAAO,CAACmB,OAAQ,OAAQc,YAAa,OAAQC,aAAc,OAAQC,cAAe,OAAQZ,MAAO,UAArG,WACA,kBAAC,OAAD,CAAMa,UAAU,UACZ,kBAAC,YAAD,CACIC,SAAU,aACVC,MAAM,UACNtC,MAAO,CAACF,MAAO,YAGvB,kBAAC,OAAD,CAAMsC,UAAU,UACZ,kBAAC,YAAD,CACIC,SAAU,aACVC,MAAM,kBACNtC,MAAO,CAACF,MAAO,YAGvB,kBAAC,OAAD,CAAMsC,UAAU,UACZ,kBAAC,YAAD,CACAC,SAAU,aACVC,MAAM,gBACNC,KAAM,EACNvC,MAAO,CAACF,MAAO,YAGnB,kBAAC,OAAD,CAAMsC,UAAU,UACZ,kBAAC,SAAD,CAAQI,QAAM,EAACC,QAAM,EAACC,QAAM,EAACC,QAAS,WAAOC,MAAM,4BAAnD,gB,GA9BE7B,aCUP8B,E,uKARP,OACA,yBAAKpD,MAAM,YAAYO,MAAO,CAACiB,UAAW,eACtC,yC,GAJsBF,aCUnB+B,E,uKARP,OACA,yBAAKrD,MAAM,YAAYO,MAAO,CAACiB,UAAW,eACtC,2C,GAJSF,aCcNgC,EAVF,kBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,aAAatB,UAAWuB,IAC3C,kBAAC,IAAD,CAAOD,KAAK,WAAWtB,UAAWK,IAClC,kBAAC,IAAD,CAAOiB,KAAK,YAAYtB,UAAWX,IACnC,kBAAC,IAAD,CAAOiC,KAAK,yBAAyBtB,UAAWkB,IAChD,kBAAC,IAAD,CAAOI,KAAK,UAAUtB,UAAWmB,MCmB1BK,MA3Bf,WACE,OACE,6BACA,kBAAC,SAAD,KACI,kBAAC,SAAD,CAAQ1D,MAAM,eAAe2D,MAAM,mBAAmBC,QAAM,GACxD,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMxB,GAAG,aAAa7B,MAAO,CAACuB,MAAM,UAAW+B,WAAY,WAA3D,QACA,kBAAC,IAAD,CAAMzB,GAAG,YAAY7B,MAAO,CAACuB,MAAM,UAAW+B,WAAY,SAA1D,YACA,kBAAC,IAAD,CAAMzB,GAAG,WAAW7B,MAAO,CAACuB,MAAM,UAAW+B,WAAY,SAAzD,aAGR,kBAAC,SAAD,CAAQF,MAAM,aAAapD,MAAO,CAACqB,gBAAiB,UAAWE,MAAM,UACjE,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,aAAa7B,MAAO,CAACuB,MAAM,UAAW+B,WAAW,WAA1D,QACA,kBAAC,IAAD,CAAMzB,GAAG,YAAY7B,MAAO,CAACuB,MAAM,UAAW+B,WAAW,SAAzD,YACA,kBAAC,IAAD,CAAMzB,GAAG,WAAW7B,MAAO,CAACuB,MAAM,UAAW+B,WAAW,SAAxD,aAGR,kBAAC,UAAD,KACI,kBAAC,EAAD,MACA,yBAAKlB,UAAU,qBCdPmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCTNC,IAASC,OACT,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,wCErInBC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.e6cc1b75.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport Particles from 'react-particles-js';\nimport Logo from '../assets/images/logo.png';\nimport Background from '../assets/images/background.jpg';\n\n\nclass Landing extends Component {\n    render(){ \n        return(\n        <div class=\"landingPage\">\n            <img src={Logo} alt=\"logo\" class=\"logo-image\"></img>\n            <Particles \n            id=\"simple\"\n            width=\"100vw\"\n            height=\"100vh\"\n            style={{\n                backgroundImage: \"url(\" + Background + \")\",\n                BackgroundRepeat: \"no-repeat\",\n                backgroundSize: \"cover\"\n            }}\n            params={{\n                particles: {\n                    number: {\n                        value: 120,\n                    },\n                    size: {\n                        value: 5,\n                    },\n                },\n                interactivity: {\n                    events: {\n                        onhover: {\n                            enable: true,\n                            mode: 'repulse',\n                        },\n                    },\n                },\n            }}/>\n        </div>\n        )\n    }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Card, CardTitle, CardText, CardActions, Button } from 'react-mdl';\nimport '../App.css';\nimport { Link } from 'react-router-dom'\n\nclass Projects extends Component {\n    // constructor() {\n    //     super();\n    //     this.state = {\n    //       width:  800,\n    //       height: 182,\n    //       cardWidth,\n    //       height\n    //     }\n    //   }\n    \n    //   /**\n    //    * Calculate & Update state of new dimensions\n    //    */\n    //   updateDimensions() {\n    //     if(window.innerWidth < 500) {\n    //       this.setState({ width: 450, height: 102 });\n    //     } else {\n    //       let update_width  = window.innerWidth-100;\n    //       let update_height = Math.round(update_width/4.4);\n    //       this.setState({ width: update_width, height: update_height });\n    //     }\n    //   }\n    \n    //   /**\n    //    * Add event listener\n    //    */\n    //   componentDidMount() {\n    //     this.updateDimensions();\n    //     window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    //   }\n    \n    //   /**\n    //    * Remove event listener\n    //    */\n    //   componentWillUnmount() {\n    //     window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    //   }\n\n    //   cardScaling(){\n    //       const updatedCardWidth = '30%'\n    //       if (this.state.width === '450'){\n    //         cardWidth = Math.min(this.state.width / 3)\n    //         this.setState({cardWidth: updatedCardWidth});\n            \n    //       }\n    //   }\n\n    render(){\n        return(\n        <div class=\"container\" style={{boxSizing: \"border-box\"}}>\n            <Card shadow={0} style={{width: '30%', height: '250px', margin: '1%', float:\"left\", backgroundColor:\"black\"}}>\n                <CardTitle expand style={{color: '#FFF', fontSize:'2em'}}>The bicycle wheel. <span class=\"redText\">project();</span></CardTitle>\n                <CardText style={{color:\"white\", fontfamily: \"courier new\"}}>\n                    A project made by me and my teacher that uses spinning bicycle wheels to display animations.\n                    The programming and setting up the mechanics was done by me.\n                </CardText>\n                <CardActions border>\n                    <Button \n                        style={{color:\"#47e551\"}}\n                        component={Link} to=\"/bycicle-wheel-project\">\n                        View Project\n                    </Button>\n                </CardActions>\n            </Card>\n            <Card shadow={0} style={{width: '30%', height: '250px', margin: '1%', float:\"left\", backgroundColor:\"black\"}}>\n                <CardTitle expand style={{color: '#fff', fontSize:'2em'}}>The brainfood. <span class=\"redText\">project();</span></CardTitle>\n                <CardText style={{color:\"white\", fontfamily: \"courier new\"}}>\n                    This is an app I designed and constructed in invision. The app was focussed on the influences\n                    on your brain by eating food. It would give users suggestions based on what mental activities\n                    you would need to do.\n                </CardText>\n                <CardActions border>\n                    <Button style={{color:\"#47e551\"}} href=\"https://projects.invisionapp.com/prototype/brainfood-cjpcjai0k0021tq0136ampq2l/play/6fc7a41b\" target=\"_blank\">View Project</Button>\n                </CardActions>\n            </Card>\n            <Card shadow={0} style={{width: '30%', height: '250px', margin: '1%', float:\"left\", backgroundColor:\"black\"}}>\n                <CardTitle expand style={{color: '#fff', fontSize:'2em'}}>Update();</CardTitle>\n                <CardText style={{color:\"white\", fontfamily: \"courier new\"}}>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Aenan convallis.\n                </CardText>\n                <CardActions border>\n                    <Button \n                        style={{color:\"#47e551\"}}\n                        component={Link} to=\"/github\">\n                        View Project\n                    </Button>\n                </CardActions>\n            </Card>\n        </div>\n        )\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport { Textfield, Grid, Button } from 'react-mdl';\nimport '../App.css';\n\nclass Contact extends Component {\n    \n    render(){ \n        return(\n        <div class=\"container\">\n            <div class=\"textfieldContainer\">\n                <h1 style={{margin: '10px', paddingLeft: '50px', paddingRight: '50px', paddingBottom: '50px', color: 'white'}}>Contact</h1>\n                <Grid className=\"grid-1\">\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Name...\"\n                        style={{width: '200px'}}\n                    />\n                </Grid>\n                <Grid className=\"grid-2\">\n                    <Textfield\n                        onChange={() => {}}\n                        label=\"Email adress...\"\n                        style={{width: '200px'}}\n                    />\n                </Grid>\n                <Grid className=\"grid-3\">\n                    <Textfield\n                    onChange={() => {}}\n                    label=\"Text lines...\"\n                    rows={3}\n                    style={{width: '200px'}}\n                    />\n                </Grid>\n                <Grid className=\"grid-4\">\n                    <Button raised accent ripple onClick={() => {alert(\"message has been sent!\")}}>Send!</Button>\n                </Grid>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Card, CardTitle, CardText, CardActions, Button } from 'react-mdl';\nimport '../App.css';\n\nclass BycicleWheelProject extends Component {\n    render(){\n        return(\n        <div class=\"container\" style={{boxSizing: \"border-box\"}}>\n            <h1>test</h1>\n        </div>\n        )\n    }\n}\n\nexport default BycicleWheelProject;","import React, { Component } from 'react';\nimport { Card, CardTitle, CardText, CardActions, Button } from 'react-mdl';\nimport '../App.css';\n\nclass Github extends Component {\n    render(){\n        return(\n        <div class=\"container\" style={{boxSizing: \"border-box\"}}>\n            <h1>Github</h1>\n        </div>\n        )\n    }\n}\n\nexport default Github;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport Projects from './projects';\nimport Contact from './contact';\nimport BycicleWheelProject from './bycicle-wheel-project';\nimport Github from \"./github\";\n\nconst Main = () => (\n    <Switch>\n        <Route exact path =\"/portfolio\" component={LandingPage} />\n        <Route path=\"/contact\" component={Contact}/>\n        <Route path=\"/projects\" component={Projects}/>\n        <Route path=\"/bycicle-wheel-project\" component={BycicleWheelProject}/>\n        <Route path=\"/Github\" component={Github}/>\n    </Switch>\n)\n\nexport default Main","import React from 'react';\nimport './App.css';\nimport { Navigation, Layout, Header, Drawer, Content } from 'react-mdl';\nimport Main from './components/main';\nimport {Link} from  'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n    <Layout>\n        <Header class=\"header-color\" title=\"{[ Mel Raeven ]}\" scroll>\n            <Navigation>\n                <Link to=\"/portfolio\" style={{color:'#f73838', fontWeight: 'bolder'}}>Home</Link>\n                <Link to=\"/projects\" style={{color:'#47e551', fontWeight: 'bold'}}>Projects</Link>\n                <Link to=\"/contact\" style={{color:'#f7d138', fontWeight: 'bold'}}>Contact</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Mel Raeven\" style={{backgroundColor: \"#373837\", color:\"white\"}}>\n            <Navigation>\n                <Link to=\"/portfolio\" style={{color:\"#f73838\", fontWeight:\"bolder\"}}>Home</Link>\n                <Link to=\"/projects\" style={{color:\"#47e551\", fontWeight:\"bold\"}}>Projects</Link>\n                <Link to=\"/contact\" style={{color:\"#f7d138\", fontWeight:\"bold\"}}>Contact</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <Main/>\n            <div className=\"page-content\" />\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.9d8d053a.png\";","module.exports = __webpack_public_path__ + \"static/media/background.3309ca13.jpg\";"],"sourceRoot":""}